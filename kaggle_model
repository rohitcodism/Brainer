{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":2645886,"sourceType":"datasetVersion","datasetId":1608934}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import tensorflow as tf\nimport os\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nprint(f\"All packages imported successfully.\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:17:50.687319Z","iopub.execute_input":"2025-04-19T09:17:50.687939Z","iopub.status.idle":"2025-04-19T09:18:11.528539Z","shell.execute_reply.started":"2025-04-19T09:17:50.687911Z","shell.execute_reply":"2025-04-19T09:18:11.527712Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"IMAGE_SIZE= 224","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:11.529877Z","iopub.execute_input":"2025-04-19T09:18:11.530541Z","iopub.status.idle":"2025-04-19T09:18:11.534463Z","shell.execute_reply.started":"2025-04-19T09:18:11.530518Z","shell.execute_reply":"2025-04-19T09:18:11.533515Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"DATASET_PATH = '/kaggle/input/brain-tumor-mri-dataset'","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:11.535278Z","iopub.execute_input":"2025-04-19T09:18:11.535540Z","iopub.status.idle":"2025-04-19T09:18:11.584748Z","shell.execute_reply.started":"2025-04-19T09:18:11.535523Z","shell.execute_reply":"2025-04-19T09:18:11.583975Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"classes = ['glioma', 'meningioma', 'pituitary', 'notumor']\ndata_type = ['Training', 'Testing']\nclass_to_label = {classes[i]: i for i in range(len(classes))}","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:11.586485Z","iopub.execute_input":"2025-04-19T09:18:11.586921Z","iopub.status.idle":"2025-04-19T09:18:11.599420Z","shell.execute_reply.started":"2025-04-19T09:18:11.586901Z","shell.execute_reply":"2025-04-19T09:18:11.598710Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"training_data_path = os.path.join(DATASET_PATH, data_type[0])\ntesting_data_path = os.path.join(DATASET_PATH, data_type[1])\n\nprint(training_data_path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:11.600342Z","iopub.execute_input":"2025-04-19T09:18:11.600636Z","iopub.status.idle":"2025-04-19T09:18:11.617715Z","shell.execute_reply.started":"2025-04-19T09:18:11.600606Z","shell.execute_reply":"2025-04-19T09:18:11.617005Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import os\nimport cv2\nimport matplotlib.pyplot as plt\n\ndef plot_images(folder, n=5):\n    images = os.listdir(folder)[:n]\n\n    plt.figure(figsize=(15,5))\n\n    for i, img_name in enumerate(images):\n        img_path = os.path.join(folder, img_name)\n        img = cv2.imread(img_path, cv2.IMREAD_COLOR)\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n        plt.subplot(1, n, i+1)\n        plt.imshow(img)\n        plt.title(img_name)\n        plt.axis('off')\n    plt.show()\n\ndef load_images(folder, label, img_size=(224,224)):\n    images=[]\n    labels=[]\n\n    for filename in os.listdir(folder):\n        img_path = os.path.join(folder, filename)\n        img = cv2.imread(img_path, cv2.IMREAD_COLOR)\n        if img is not None:\n            img = cv2.resize(img, img_size)\n            images.append(img)\n            labels.append(label)\n    return images, labels\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:11.618368Z","iopub.execute_input":"2025-04-19T09:18:11.618557Z","iopub.status.idle":"2025-04-19T09:18:12.178140Z","shell.execute_reply.started":"2025-04-19T09:18:11.618541Z","shell.execute_reply":"2025-04-19T09:18:12.177357Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plot_images(os.path.join(training_data_path, classes[0]))\nplot_images(os.path.join(training_data_path, classes[1]))\nplot_images(os.path.join(training_data_path, classes[2]))\nplot_images(os.path.join(training_data_path, classes[3]))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:12.179318Z","iopub.execute_input":"2025-04-19T09:18:12.180168Z","iopub.status.idle":"2025-04-19T09:18:14.408119Z","shell.execute_reply.started":"2025-04-19T09:18:12.180130Z","shell.execute_reply":"2025-04-19T09:18:14.406700Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plot_images(os.path.join(testing_data_path, classes[0]))\nplot_images(os.path.join(testing_data_path, classes[1]))\nplot_images(os.path.join(testing_data_path, classes[2]))\nplot_images(os.path.join(testing_data_path, classes[3]))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:14.410122Z","iopub.execute_input":"2025-04-19T09:18:14.410757Z","iopub.status.idle":"2025-04-19T09:18:16.276728Z","shell.execute_reply.started":"2025-04-19T09:18:14.410695Z","shell.execute_reply":"2025-04-19T09:18:16.275925Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"\n\ndef train_df(tr_path):\n    classes, class_paths = zip(*[(label, os.path.join(tr_path, label, image))\n                                 for label in os.listdir(tr_path) if os.path.isdir(os.path.join(tr_path, label))\n                                 for image in os.listdir(os.path.join(tr_path, label))])\n\n    tr_df = pd.DataFrame({'Class Path': class_paths, 'Class': classes})\n    return tr_df\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.277576Z","iopub.execute_input":"2025-04-19T09:18:16.277800Z","iopub.status.idle":"2025-04-19T09:18:16.282998Z","shell.execute_reply.started":"2025-04-19T09:18:16.277783Z","shell.execute_reply":"2025-04-19T09:18:16.282263Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def test_df(test_data_path):\n    classes, class_paths = zip(*[(label, os.path.join(test_data_path, label, image))\n                                 for label in os.listdir(test_data_path) if os.path.isdir(os.path.join(test_data_path, label))\n                                 for image in os.listdir(os.path.join(test_data_path, label))])\n    test_df = pd.DataFrame({'Class Path': class_paths, 'Class': classes})\n    return test_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.285522Z","iopub.execute_input":"2025-04-19T09:18:16.285716Z","iopub.status.idle":"2025-04-19T09:18:16.300332Z","shell.execute_reply.started":"2025-04-19T09:18:16.285694Z","shell.execute_reply":"2025-04-19T09:18:16.299593Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tr_df = train_df(tr_path=training_data_path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.301236Z","iopub.execute_input":"2025-04-19T09:18:16.301500Z","iopub.status.idle":"2025-04-19T09:18:16.332158Z","shell.execute_reply.started":"2025-04-19T09:18:16.301482Z","shell.execute_reply":"2025-04-19T09:18:16.331540Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tr_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.333000Z","iopub.execute_input":"2025-04-19T09:18:16.333521Z","iopub.status.idle":"2025-04-19T09:18:16.360457Z","shell.execute_reply.started":"2025-04-19T09:18:16.333494Z","shell.execute_reply":"2025-04-19T09:18:16.359639Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"test_df = test_df(test_data_path=testing_data_path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.361194Z","iopub.execute_input":"2025-04-19T09:18:16.361506Z","iopub.status.idle":"2025-04-19T09:18:16.374059Z","shell.execute_reply.started":"2025-04-19T09:18:16.361468Z","shell.execute_reply":"2025-04-19T09:18:16.373254Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"test_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.374947Z","iopub.execute_input":"2025-04-19T09:18:16.375321Z","iopub.status.idle":"2025-04-19T09:18:16.415842Z","shell.execute_reply.started":"2025-04-19T09:18:16.375301Z","shell.execute_reply":"2025-04-19T09:18:16.414928Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(14,6))\n\nax = sns.countplot(data=tr_df, y=tr_df['Class'])\n\nplt.xlabel('')\nplt.ylabel('')\nplt.title(\"Count of the images\", fontsize=20)\nax.bar_label(ax.containers[0])\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.417295Z","iopub.execute_input":"2025-04-19T09:18:16.417589Z","iopub.status.idle":"2025-04-19T09:18:16.659755Z","shell.execute_reply.started":"2025-04-19T09:18:16.417563Z","shell.execute_reply":"2025-04-19T09:18:16.658935Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(14,6))\n\nax = sns.countplot(data=test_df, y=test_df['Class'])\n\nplt.xlabel('')\nplt.ylabel('')\nplt.title(\"Count of the images\", fontsize=20)\nax.bar_label(ax.containers[0])\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.661145Z","iopub.execute_input":"2025-04-19T09:18:16.661463Z","iopub.status.idle":"2025-04-19T09:18:16.849700Z","shell.execute_reply.started":"2025-04-19T09:18:16.661445Z","shell.execute_reply":"2025-04-19T09:18:16.848281Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:16.850817Z","iopub.execute_input":"2025-04-19T09:18:16.851112Z","iopub.status.idle":"2025-04-19T09:18:17.151317Z","shell.execute_reply.started":"2025-04-19T09:18:16.851088Z","shell.execute_reply":"2025-04-19T09:18:17.150656Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"val_df, ts_df = train_test_split(test_df, random_state=20, train_size=0.5, stratify=test_df['Class'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:17.151949Z","iopub.execute_input":"2025-04-19T09:18:17.152162Z","iopub.status.idle":"2025-04-19T09:18:17.159642Z","shell.execute_reply.started":"2025-04-19T09:18:17.152145Z","shell.execute_reply":"2025-04-19T09:18:17.158789Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"val_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:17.160347Z","iopub.execute_input":"2025-04-19T09:18:17.160626Z","iopub.status.idle":"2025-04-19T09:18:17.178112Z","shell.execute_reply.started":"2025-04-19T09:18:17.160602Z","shell.execute_reply":"2025-04-19T09:18:17.177488Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"ts_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:17.178772Z","iopub.execute_input":"2025-04-19T09:18:17.178941Z","iopub.status.idle":"2025-04-19T09:18:17.197519Z","shell.execute_reply.started":"2025-04-19T09:18:17.178928Z","shell.execute_reply":"2025-04-19T09:18:17.196758Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"batch_size = 32\nimage_size = (224,224)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:17.198305Z","iopub.execute_input":"2025-04-19T09:18:17.198527Z","iopub.status.idle":"2025-04-19T09:18:17.212337Z","shell.execute_reply.started":"2025-04-19T09:18:17.198504Z","shell.execute_reply":"2025-04-19T09:18:17.211623Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tr_gen = ImageDataGenerator(\n    rescale=1/255,\n    brightness_range=(0.8,1.2),\n    rotation_range=20,\n    zoom_range=0.15,\n    shear_range=0.15,\n    horizontal_flip=True,\n    fill_mode=\"nearest\"\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:17.212974Z","iopub.execute_input":"2025-04-19T09:18:17.213175Z","iopub.status.idle":"2025-04-19T09:18:17.227262Z","shell.execute_reply.started":"2025-04-19T09:18:17.213157Z","shell.execute_reply":"2025-04-19T09:18:17.226625Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"ts_gen = ImageDataGenerator(\n    rescale=1/255,\n    brightness_range=(0.8,1.2),\n    rotation_range=20,\n    zoom_range=0.15,\n    shear_range=0.15,\n    horizontal_flip=True,\n    fill_mode=\"nearest\"\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:17.227891Z","iopub.execute_input":"2025-04-19T09:18:17.228098Z","iopub.status.idle":"2025-04-19T09:18:17.242760Z","shell.execute_reply.started":"2025-04-19T09:18:17.228084Z","shell.execute_reply":"2025-04-19T09:18:17.242081Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tr_dgen = tr_gen.flow_from_dataframe(tr_df, x_col='Class Path', y_col='Class', batch_size=batch_size, target_size=image_size)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:17.243860Z","iopub.execute_input":"2025-04-19T09:18:17.244127Z","iopub.status.idle":"2025-04-19T09:18:29.959684Z","shell.execute_reply.started":"2025-04-19T09:18:17.244112Z","shell.execute_reply":"2025-04-19T09:18:29.958893Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"val_gen = tr_gen.flow_from_dataframe(val_df, x_col='Class Path', y_col='Class', batch_size=batch_size, target_size=image_size)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:29.960469Z","iopub.execute_input":"2025-04-19T09:18:29.960815Z","iopub.status.idle":"2025-04-19T09:18:31.419056Z","shell.execute_reply.started":"2025-04-19T09:18:29.960796Z","shell.execute_reply":"2025-04-19T09:18:31.418150Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"test_gen = ts_gen.flow_from_dataframe(ts_df, x_col='Class Path', y_col='Class', batch_size=batch_size, target_size=image_size, shuffle=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:31.420110Z","iopub.execute_input":"2025-04-19T09:18:31.420673Z","iopub.status.idle":"2025-04-19T09:18:32.990397Z","shell.execute_reply.started":"2025-04-19T09:18:31.420645Z","shell.execute_reply":"2025-04-19T09:18:32.989272Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"class_dict = tr_dgen.class_indices\nclasses = list(class_dict.keys())\nimages, labels = next(test_gen)\n\nplt.figure(figsize=(20, 20))\n\nfor i, (image, label) in enumerate(zip(images[:16], labels[:16])):\n    plt.subplot(4,4, i+1)\n    plt.imshow(image)\n    class_name = classes[np.argmax(label)]\n    plt.title(class_name, color='k', fontsize=15)\n\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:32.991438Z","iopub.execute_input":"2025-04-19T09:18:32.991850Z","iopub.status.idle":"2025-04-19T09:18:36.853809Z","shell.execute_reply.started":"2025-04-19T09:18:32.991824Z","shell.execute_reply":"2025-04-19T09:18:36.852646Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras.applications import ResNet50\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.layers import Dense, Dropout, GlobalAveragePooling2D, Input, BatchNormalization\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.regularizers import l2\nfrom keras.api.losses import CategoricalCrossentropy\n\ndef create_model(num_classes=4, input_shape=(224, 224, 3), learning_rate=1e-4):\n    # Load ResNet50 without the top layer\n    base_model = ResNet50(include_top=False, weights='imagenet', input_shape=input_shape)\n\n    for layer in base_model.layers[-10:]:\n        layer.trainable = True\n\n    inputs = Input(shape=input_shape)\n    x = base_model(inputs, training=False)\n    x = GlobalAveragePooling2D()(x)\n\n    # Your custom fully-connected head\n    for units, rate in [(512, 0.4), (256, 0.3), (128, 0.3)]:\n        x = Dense(units, kernel_initializer='he_uniform')(x)\n        x = BatchNormalization()(x)\n        x = tf.keras.layers.ReLU()(x)\n        x = Dropout(rate)(x)\n\n    outputs = Dense(num_classes, activation='softmax')(x)\n\n    model = Model(inputs, outputs)\n\n    model.compile(\n        optimizer=Adam(learning_rate=learning_rate),\n        loss=CategoricalCrossentropy(),\n        metrics=['accuracy', 'precision', 'recall']\n    )\n\n    return model\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:36.858502Z","iopub.execute_input":"2025-04-19T09:18:36.858798Z","iopub.status.idle":"2025-04-19T09:18:36.882000Z","shell.execute_reply.started":"2025-04-19T09:18:36.858777Z","shell.execute_reply":"2025-04-19T09:18:36.881176Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model = create_model()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:36.883281Z","iopub.execute_input":"2025-04-19T09:18:36.883660Z","iopub.status.idle":"2025-04-19T09:18:42.167822Z","shell.execute_reply.started":"2025-04-19T09:18:36.883630Z","shell.execute_reply":"2025-04-19T09:18:42.167031Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"early_stopping = EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True, verbose=1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:42.168620Z","iopub.execute_input":"2025-04-19T09:18:42.168840Z","iopub.status.idle":"2025-04-19T09:18:42.173855Z","shell.execute_reply.started":"2025-04-19T09:18:42.168824Z","shell.execute_reply":"2025-04-19T09:18:42.172878Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"lr_scheduler = ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=3, verbose=1, min_lr=1e-7)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:42.174911Z","iopub.execute_input":"2025-04-19T09:18:42.175223Z","iopub.status.idle":"2025-04-19T09:18:42.192536Z","shell.execute_reply.started":"2025-04-19T09:18:42.175179Z","shell.execute_reply":"2025-04-19T09:18:42.191504Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:42.193631Z","iopub.execute_input":"2025-04-19T09:18:42.193934Z","iopub.status.idle":"2025-04-19T09:18:42.236488Z","shell.execute_reply.started":"2025-04-19T09:18:42.193910Z","shell.execute_reply":"2025-04-19T09:18:42.235872Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"history = model.fit(\n    tr_dgen,\n    epochs=1000,\n    validation_data=val_gen,\n    callbacks=[lr_scheduler, early_stopping],\n    shuffle=False\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T09:18:42.237328Z","iopub.execute_input":"2025-04-19T09:18:42.237594Z","iopub.status.idle":"2025-04-19T10:05:35.730583Z","shell.execute_reply.started":"2025-04-19T09:18:42.237570Z","shell.execute_reply":"2025-04-19T10:05:35.729895Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model.evaluate(val_gen)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T10:18:38.329501Z","iopub.execute_input":"2025-04-19T10:18:38.330105Z","iopub.status.idle":"2025-04-19T10:18:47.555316Z","shell.execute_reply.started":"2025-04-19T10:18:38.330073Z","shell.execute_reply":"2025-04-19T10:18:47.554574Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model.evaluate(test_gen)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T10:05:58.222825Z","iopub.execute_input":"2025-04-19T10:05:58.223123Z","iopub.status.idle":"2025-04-19T10:06:11.828964Z","shell.execute_reply.started":"2025-04-19T10:05:58.223101Z","shell.execute_reply":"2025-04-19T10:06:11.828397Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\n# Accuracy plot\nplt.figure(figsize=(12, 4))\nplt.subplot(1, 2, 1)\nplt.plot(history.history['accuracy'], label='Train Accuracy')\nplt.plot(history.history['val_accuracy'], label='Val Accuracy')\nplt.title('Accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.legend()\n\n# Loss plot\nplt.subplot(1, 2, 2)\nplt.plot(history.history['loss'], label='Train Loss')\nplt.plot(history.history['val_loss'], label='Val Loss')\nplt.title('Loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T10:07:31.768017Z","iopub.execute_input":"2025-04-19T10:07:31.768364Z","iopub.status.idle":"2025-04-19T10:07:32.177820Z","shell.execute_reply.started":"2025-04-19T10:07:31.768338Z","shell.execute_reply":"2025-04-19T10:07:32.176990Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.metrics import classification_report\n\ntest_gen.reset()\ny_true = test_gen.classes\ny_pred = model.predict(test_gen)\ny_pred_labels = np.argmax(y_pred, axis=1)\n\nprint(classification_report(y_true, y_pred_labels, target_names=test_gen.class_indices.keys()))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T10:11:36.724730Z","iopub.execute_input":"2025-04-19T10:11:36.725720Z","iopub.status.idle":"2025-04-19T10:11:49.280923Z","shell.execute_reply.started":"2025-04-19T10:11:36.725692Z","shell.execute_reply":"2025-04-19T10:11:49.279958Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n\ncm = confusion_matrix(y_true, y_pred_labels)\nConfusionMatrixDisplay(cm, display_labels=test_gen.class_indices.keys()).plot(cmap='Blues')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T10:12:39.359450Z","iopub.execute_input":"2025-04-19T10:12:39.360397Z","iopub.status.idle":"2025-04-19T10:12:39.597014Z","shell.execute_reply.started":"2025-04-19T10:12:39.360368Z","shell.execute_reply":"2025-04-19T10:12:39.596249Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.metrics import roc_curve, auc\nfrom sklearn.preprocessing import label_binarize\n\n# One-hot encode true labels\ny_true_bin = label_binarize(y_true, classes=np.arange(len(class_labels)))\n\n# Plot ROC for each class\nplt.figure(figsize=(10, 6))\nfor i in range(len(class_labels)):\n    fpr, tpr, _ = roc_curve(y_true_bin[:, i], y_pred[:, i])\n    roc_auc = auc(fpr, tpr)\n    plt.plot(fpr, tpr, label=f'{class_labels[i]} (AUC = {roc_auc:.2f})')\n\nplt.plot([0, 1], [0, 1], 'k--')  # Diagonal\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC Curve')\nplt.legend(loc='lower right')\nplt.grid()\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T10:12:59.919841Z","iopub.execute_input":"2025-04-19T10:12:59.920162Z","iopub.status.idle":"2025-04-19T10:13:00.134792Z","shell.execute_reply.started":"2025-04-19T10:12:59.920141Z","shell.execute_reply":"2025-04-19T10:13:00.134006Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model.save(\"brain_tumor_classifier.h5\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-19T10:16:57.901931Z","iopub.execute_input":"2025-04-19T10:16:57.902266Z","iopub.status.idle":"2025-04-19T10:16:58.957770Z","shell.execute_reply.started":"2025-04-19T10:16:57.902241Z","shell.execute_reply":"2025-04-19T10:16:58.956947Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}